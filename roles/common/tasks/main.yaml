- name: sysctl params required by setup, params persist across reboots
  become: true
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    state: present
    create: true
    line: "{{ item }}"
  loop:
    - "net.bridge.bridge-nf-call-iptables  = 1"
    - "net.bridge.bridge-nf-call-ip6tables = 1"
    - "net.ipv4.ip_forward                 = 1"
- name: Apply sysctl params without reboot
  become: true
  shell: sysctl --system

- name: Verify that br_netfilter is loaded
  shell: lsmod | grep br_netfilter
  changed_when: false
  ignore_errors: true
  register: out_betfilter
- name: Fail if br_netfilter is not loaded
  fail:
    msg: "br_netfilter is not loaded"
  when: out_betfilter.rc != 0
- name: Verify that overlay is loaded
  shell: lsmod | grep overlay
  changed_when: false
  ignore_errors: true
  register: out_overlay
- name: Fail if overlay is not loaded
  fail:
    msg: "overlay is not loaded"
  when: out_overlay.rc != 0

- name: Verify sysctl
  become: true
  shell: sudo sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
  changed_when: false
  register: out_sysctl
- name: Fail if system variables are not set to 1
  fail:
    msg: "system variable {{ item }} does not end with 1"
  when: item.split("=")[-1].strip() != "1"
  with_items: "{{ out_sysctl.stdout_lines }}"

- name: Check if Docker is installed
  command: "docker --version"
  ignore_errors: true
  register: docker_check
  
- name: Run apt-get update and install docker packages
  apt:
    update_cache: true
    name:
      - containerd.io 
  
  become: true
  register: config_changed

- name: configure containerd
  shell: |
    mkdir -p /etc/containerd
    containerd config default | tee /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
    systemctl restart containerd

- name: Restart containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted
  become: true
  when: config_changed is changed

- name: Install packages needed to use the Kubernetes apt repository
  apt:
    update_cache: true
    name:
      - apt-transport-https 
      - ca-certificates 
      - curl 
      - gpg
  become: true

- name: Check if the kubernetes signing key file exists
  stat:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: k8s_gpg_key_check
- name: Download the public signing key for the Kubernetes package repositories
  shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  when: not k8s_gpg_key_check.stat.exists

- name: Add repository for kubernetes 1.29 to Apt sources
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
    state: present
    create: yes
  become: true

- name: Install packages needed to use the Kubernetes apt repository
  apt:
    update_cache: true
    name:
      - kubelet 
      - kubeadm 
      - kubectl
  become: true
- name: Prevent kubernetes being upgraded
  shell: apt-mark hold kubelet kubeadm kubectl
  become: true